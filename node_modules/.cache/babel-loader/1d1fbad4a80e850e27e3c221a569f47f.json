{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/j.luse/Desktop/thinkful/react/noteful-v2/src/AddNote/AddNote.js\";\nimport React from 'react';\nimport NotesContext from '../ApiContext';\nimport config from '../config';\nimport './AddNote.css';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport PropTypes from 'prop-types';\nexport default class AddNote extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: {\n        value: '',\n        touched: false\n      },\n      folder: {\n        value: ''\n      }\n    };\n\n    this.setName = name => {\n      this.setState({\n        name: {\n          value: name,\n          touched: true\n        }\n      }); // Switch touched to true\n    };\n\n    this.validateName = () => {\n      let name = this.state.name.value;\n\n      if (name.length <= 0) {\n        return '(Please name your note)';\n      }\n    };\n\n    this.setFolder = folder => {\n      this.setState({\n        folder: {\n          value: folder\n        }\n      });\n    };\n\n    this.validateFolder = () => {\n      let folder = this.state.folder.value;\n\n      if (folder === '') {\n        return '(Please choose a folder)';\n      } else if (folder === 'choose folder') {\n        return \"(Please choose a folder)\";\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newNote = {\n        name: e.target['note-name'].value,\n        modified: new Date(),\n        folderId: e.target['note-folder'].value,\n        content: e.target['note-content'].value\n      };\n      fetch(`${config.API_ENDPOINT}/notes`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(e => Promise.reject(e));\n        }\n\n        return res.json();\n      }).then(data => {\n        console.log(data.folderId);\n        this.context.addNote(data);\n        this.props.history.push(`/folder/${data.folderId}`);\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      folders = []\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"add-note\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Make Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note-name-input\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: this.validateName()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"note-name-input\",\n          name: \"note-name\",\n          value: this.state.name.value,\n          onChange: e => this.setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note-form-content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"note-form-content\",\n          name: \"note-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note-form-folder\",\n          children: [\"Folder\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: this.validateFolder()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"note-form-folder\",\n          name: \"note-folder\",\n          value: this.state.folder.value,\n          onChange: e => this.setFolder(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"choose folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: folder.id,\n            id: folder.id,\n            children: folder.name\n          }, folder.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          type: \"submit\",\n          disabled: this.validateName() || this.validateFolder(),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nAddNote.contextType = NotesContext;\nAddNote.defaultProps = {\n  history: {\n    push: () => {}\n  }\n};\nAddNote.defaultProps = {\n  name: \"\",\n  folder: \"\"\n};\nAddNote.propTypes = {\n  name: PropTypes.string.isRequired,\n  folder: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/j.luse/Desktop/thinkful/react/noteful-v2/src/AddNote/AddNote.js"],"names":["React","NotesContext","config","NotefulForm","PropTypes","AddNote","Component","state","name","value","touched","folder","setName","setState","validateName","length","setFolder","validateFolder","handleSubmit","e","preventDefault","newNote","target","modified","Date","folderId","content","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","data","console","log","context","addNote","props","history","push","catch","error","render","folders","map","id","contextType","defaultProps","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NotesContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport PropTypes from 'prop-types';\n\nexport default class AddNote  extends React.Component{\n    state = {\n        name: {value: '', touched: false},\n        folder: {value: ''}\n    \n    };\n    setName = name => {\n        this.setState({name: {value: name, touched: true}}); // Switch touched to true\n    };\n    validateName = () => {\n      let name = this.state.name.value;\n     \n            if (name.length <= 0) {\n              \n                return '(Please name your note)';\n    }\n    }\n    setFolder = folder => {\n      this.setState({folder: {value: folder}})\n    }\n    validateFolder = () => {\n     let folder = this.state.folder.value;\n     if (folder === ''){\n      return '(Please choose a folder)'\n     } else if (folder === 'choose folder'){\n       return \"(Please choose a folder)\"\n     }\n    \n     }\n     \n    \nstatic contextType = NotesContext;\n\nstatic defaultProps = {\n    history: {\n        push: () => {}\n    },\n}\n\nhandleSubmit = e => {\n    e.preventDefault()\n    const newNote= {\n        name: e.target['note-name'].value,\n        modified: new Date(),\n        folderId: e.target['note-folder'].value,\n        content: e.target['note-content'].value\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, \n    {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n          },\n        body: JSON.stringify(newNote)\n    })\n    .then(res => {\n        if(!res.ok){\n        return res.json().then(e=>Promise.reject(e))\n        }\n        return res.json()\n    })\n    .then( data =>{\n        console.log(data.folderId)\n        this.context.addNote(data)\n        this.props.history.push(`/folder/${data.folderId}`)})\n    .catch( error => {\n        console.error({ error })\n    })\n}\n\nrender(){\n    const {folders = []}=this.context\n\n    return(\n        <section className='add-note'>\n            <h2>Make Note</h2>\n            <NotefulForm onSubmit={this.handleSubmit}>\n            <label htmlFor='note-name-input'>\n                Name\n                 \n                   { <p className=\"error\">{this.validateName()}</p>}\n            </label>\n            <input type='text' id='note-name-input' name='note-name' \n            value={this.state.name.value}\n            onChange={e => this.setName(e.target.value)}/>\n            <label htmlFor='note-form-content'>\n                Content\n               </label>  \n                <input id = 'note-form-content' name = \"note-content\"/>\n           \n            <label htmlFor='note-form-folder'>\n                Folder\n            {<p className=\"error\">{this.validateFolder()}</p>}\n                 </label>\n                <select id='note-form-folder' name = \"note-folder\" value={this.state.folder.value}\n            onChange={e => this.setFolder(e.target.value)}>\n                    <option value = {null}>choose folder</option>\n                    {folders.map(folder=>\n                        <option value = {folder.id} key = {folder.id} id={folder.id}>{folder.name}</option> )}\n                </select>\n           \n            <button className='buttons' type = \"submit\" disabled={this.validateName()|| this.validateFolder()}>Done</button>\n          \n         </NotefulForm>\n        </section>\n\n\n    )\n}\n}\nAddNote.defaultProps = {\n    name: \"\",\n    folder: \"\"\n}\nAddNote.propTypes = {\n    name: PropTypes.string.isRequired,\n    folder: PropTypes.string.isRequired\n  }\n"]},"metadata":{},"sourceType":"module"}