{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/j.luse/Desktop/thinkful/react/noteful-v2/src/AddFolder/AddFolder.js\";\nimport React from 'react';\nimport NotesContext from '../ApiContext';\nimport config from '../config';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddFolder.css';\nimport PropTypes from 'prop-types';\nexport default class AddFolder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folderName: {\n        value: ''\n      }\n    };\n\n    this.setFolderName = folderName => {\n      this.setState({\n        folderName: {\n          value: folderName\n        }\n      });\n    };\n\n    this.validateFolder = () => {\n      let folderName = this.state.folderName.value;\n\n      if (folderName.length <= 0) {\n        return '(Please name your folder)';\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const folder = {\n        name: e.target['folder-name'].value\n      };\n      fetch(`${config.API_ENDPOINT}/folders`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(folder)\n      }).then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n        return res.json();\n      }).then(folder => {\n        this.context.addFolder(folder);\n        this.props.history.push(`/folder/${folder.id}`);\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"AddFolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"folder-name-input\",\n            children: \"Folder Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"folder-name-input\",\n            name: \"folder-name\",\n            onChange: e => this.setFolderName(e.target.value),\n            value: this.state.folderName.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: this.validateFolder(),\n            children: \"Add folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAddFolder.contextType = NotesContext;\nAddFolder.defaultProps = {\n  history: {\n    push: () => {}\n  }\n};\nAddFolder.defaultProps = {\n  folderName: \"\"\n};\nAddFolder.propTypes = {\n  folderName: PropTypes.string.isRequired,\n  props: PropTypes.shape({\n    history: PropTypes.object\n  })\n};","map":{"version":3,"sources":["/Users/j.luse/Desktop/thinkful/react/noteful-v2/src/AddFolder/AddFolder.js"],"names":["React","NotesContext","config","NotefulForm","PropTypes","AddFolder","Component","state","folderName","value","setFolderName","setState","validateFolder","length","handleSubmit","e","preventDefault","folder","name","target","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","context","addFolder","props","history","push","id","catch","error","console","render","contextType","defaultProps","propTypes","string","isRequired","shape","object"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NotesContext from '../ApiContext'\nimport config from '../config'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport './AddFolder.css'\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder  extends React.Component{\n  state = {\n    folderName: {value: ''}\n\n};\nsetFolderName = folderName => {\n    this.setState({folderName: {value: folderName, }}); \n};\nvalidateFolder = () => {\n  let folderName = this.state.folderName.value;\n \n        if (folderName.length <= 0) {\n          \n            return '(Please name your folder)';\n}\n}\n\nstatic contextType = NotesContext;\n\nstatic defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Folder Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name'  onChange={e => this.setFolderName(e.target.value)} value={this.state.folderName.value}/>\n          </div>\n          <div className='buttons'>\n            <button type='submit' disabled={this.validateFolder()}>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\nAddFolder.defaultProps = {\n  folderName: \"\",\n}\nAddFolder.propTypes = {\n  folderName: PropTypes.string.isRequired,\n  props: PropTypes.shape({\n    history: PropTypes.object,\n  })\n}"]},"metadata":{},"sourceType":"module"}