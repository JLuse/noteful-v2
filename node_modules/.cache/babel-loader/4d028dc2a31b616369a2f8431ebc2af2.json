{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/j.luse/Desktop/thinkful/react/noteful-v2/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      folders: []\n    };\n\n    this.handleAddFolder = folder => {\n      this.setState({\n        folders: [...this.state.folders, folder]\n      });\n    };\n\n    this.handleAddNote = note => {\n      this.setState({\n        notes: [...this.state.notes, note]\n      });\n    };\n\n    this.handleDeleteNote = noteId => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== noteId)\n      });\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(`${config.API_ENDPOINT}/notes`), fetch(`${config.API_ENDPOINT}/folders`)]).then(([notesRes, foldersRes]) => {\n      if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n      if (!foldersRes.ok) return foldersRes.json().then(e => Promise.reject(e));\n      return Promise.all([notesRes.json(), foldersRes.json()]);\n    }).then(([notes, folders]) => {\n      this.setState({\n        notes,\n        folders\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [['/', '/folder/:folderId'].map(path => /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        component: NoteListNav\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/note/:noteId\",\n        component: NotePageNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-note\",\n        component: NotePageNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  renderMainRoutes() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [['/', '/folder/:folderId'].map(path => /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        component: NoteListMain\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/note/:noteId\",\n        component: NotePageMain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-folder\",\n        component: AddFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-note\",\n        component: AddNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote\n    };\n    return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n      value: value,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"App__nav\",\n          children: this.renderNavRoutes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App__header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Noteful\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"check-double\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"App__main\",\n          children: this.renderMainRoutes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/j.luse/Desktop/thinkful/react/noteful-v2/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","ApiContext","config","App","state","notes","folders","handleAddFolder","folder","setState","handleAddNote","note","handleDeleteNote","noteId","filter","id","componentDidMount","Promise","all","fetch","API_ENDPOINT","then","notesRes","foldersRes","ok","json","e","reject","catch","error","console","renderNavRoutes","map","path","renderMainRoutes","render","value","addFolder","addNote","deleteNote"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}